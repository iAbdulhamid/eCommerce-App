// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.API.Data;

namespace eCommerce.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190706142949_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("eCommerce.API.Models.category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("ParentCategory");

                    b.Property<int>("parentCategory_ID");

                    b.HasKey("ID");

                    b.HasIndex("parentCategory_ID");

                    b.ToTable("category");
                });

            modelBuilder.Entity("eCommerce.API.Models.parentCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("parentCategory");
                });

            modelBuilder.Entity("eCommerce.API.Models.product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailableQuantity");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("QuantityLimit");

                    b.Property<int>("category_ID");

                    b.HasKey("ID");

                    b.HasIndex("category_ID");

                    b.ToTable("product");
                });

            modelBuilder.Entity("eCommerce.API.Models.category", b =>
                {
                    b.HasOne("eCommerce.API.Models.parentCategory", "parentCategory")
                        .WithMany("categories")
                        .HasForeignKey("parentCategory_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eCommerce.API.Models.product", b =>
                {
                    b.HasOne("eCommerce.API.Models.category", "category")
                        .WithMany("products")
                        .HasForeignKey("category_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
